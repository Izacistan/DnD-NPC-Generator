@model NPC
@{
    string toggleMagic(bool caster)
    {
        if(!caster)
        {
            return "disabled";
        } else
        {
            return "";
        }
    }
    string GetModString(int mod)
    {
        if (mod >= 0)
        {
            return "+ " + mod;
        }
        else
        {
            return mod.ToString();
        }
    }

    void profBonus(NPC npc, string name, string baseAbi)
    {
        bool skill = (bool)typeof(NPC).GetProperty("IP" + name).GetValue(npc);
        bool prof = (bool)typeof(NPC).GetProperty("IE" + name).GetValue(npc);
        int abi = (int)typeof(NPC).GetProperty(baseAbi + "Mod").GetValue(npc);
        int mod = (prof) ? abi + (npc.ProfMod * 2) : abi + npc.ProfMod;
        if (skill)
        {

            <li class="skill list-group-item border border-dark border-4">
                <span>@splitCamelCase(name)</span>
                <span>@GetModString(mod)</span>
            </li>
        }
        else
        {
            <li class="skill list-group-item border border-dark-subtle border-4">
                <span>@splitCamelCase(name)</span>
                <span>@GetModString(abi)</span>
            </li>
        }
    }

    string splitCamelCase(string str)
    {
        return System.Text.RegularExpressions.Regex.Replace(str, "([A-Z])", " $1", System.Text.RegularExpressions.RegexOptions.Compiled).Trim();
    }
}

<div class="card">
    <div class="card-block">
        <div class="card-header">
            <h4 class="card-title">@Model.Name</h4>
            <h6 class="card-subtitle text-muted">@Model.NPCRace @Model.NPCClass Lv. @Model.Level</h6>
        </div>
        <div class="card-body tab-content">

            <table id="main-@Model.NPCId" role="tabpanel" class="table table-borderless align-middle text-center tab-pane fade show active" tabindex="0">
                <thead>
                    <tr>
                        <td>STR</td>
                        <td>DEX</td>
                        <td>CON</td>
                        <td>INT</td>
                        <td>WIS</td>
                        <td>CHA</td>
                    </tr>
                </thead>
                <tbody>
                    <tr class="h2">
                        <td>@GetModString(Model.StrMod)</td>
                        <td>@GetModString(Model.DexMod)</td>
                        <td>@GetModString(Model.ConMod)</td>
                        <td>@GetModString(Model.IntMod)</td>
                        <td>@GetModString(Model.WisMod)</td>
                        <td>@GetModString(Model.ChaMod)</td>
                    </tr>
                    <tr class="text-secondary">
                        <td>@Model.StrScore</td>
                        <td>@Model.DexScore</td>
                        <td>@Model.ConScore</td>
                        <td>@Model.IntScore</td>
                        <td>@Model.WisScore</td>
                        <td>@Model.ChaScore</td>
                    </tr>
                </tbody>
            </table>

            <div id="abi-@Model.NPCId" role="tabpanel" class="tab-pane fade" tabindex="0">
                <ul class="list-group list-group-horizontal flex-wrap">
                    @{
                        profBonus(Model, "Acrobatics", "Dex");
                        profBonus(Model, "AnimalHandling", "Wis");
                        profBonus(Model, "Arcana", "Int");
                        profBonus(Model, "Athletic", "Str");
                        profBonus(Model, "Deception", "Cha");
                        profBonus(Model, "History", "Int");
                        profBonus(Model, "Insight", "Wis");
                        profBonus(Model, "Intimidation", "Cha");
                        profBonus(Model, "Investigation", "Int");
                        profBonus(Model, "Medicine", "Wis");
                        profBonus(Model, "Nature", "Int");
                        profBonus(Model, "Perception", "Wis");
                        profBonus(Model, "Performance", "Cha");
                        profBonus(Model, "Persuasion", "Cha");
                        profBonus(Model, "Religion", "Int");
                        profBonus(Model, "SleightOfHand", "Dex");
                        profBonus(Model, "Stealth", "Dex");
                        profBonus(Model, "Survival", "Wis");
                    }
                </ul>
            </div>



        </div>
    </div>

    <!--NAVIGATION-->
    <ul class="nav nav-tabs nav-fill" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#main-@Model.NPCId" type="button" role="tab"><i class="fa-solid fa-user"></i></button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#abi-@Model.NPCId" type="button" role="tab"><i class="fa-solid fa-hand-fist"></i></button>
        </li>
        <li class="nav-item">
            <a class="nav-link"><i class="fa-solid fa-shield"></i></a>
        </li>
        <li class="nav-item">
            <a class="nav-link @toggleMagic(Model.isSpellcaster)"><i class="fa-solid fa-wand-sparkles"></i></a>
        </li>
    </ul>
</div>