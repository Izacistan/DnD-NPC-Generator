using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.ModelBinding;
using DnD_NPC_Generator.Models;
using DnD_NPC_Generator.Sessions;
using DnD_NPC_Generator.Services;
using Microsoft.EntityFrameworkCore;
using DnD_NPC_Generator.Repository;
using System.Security.Claims;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Authorization;

namespace DnD_NPC_Generator.Controllers
{
    [Authorize]
    public class NPCController : Controller
    {
        private ILegionRepository legion { get; set; }
        private UserManager<User> userManager { get; set; }
        private string userId { get; set; }

        public NPCController(ILegionRepository legion, UserManager<User> mngr)
        {
            this.legion = legion;
            this.userManager = mngr;
        }

        [HttpGet]
        public async Task<IActionResult> Index()
        {
            var user = await userManager.GetUserAsync(HttpContext.User);
            var model = new NPCListView()
            {
                NPCs = this.legion.GetAllNpcsByUser(user)
            };
            ViewBag.User = user;
            return View(model);
        }

        [HttpGet]
        public async Task<IActionResult> Add()
        {
            ViewBag.Action = "Add";
            ViewBag.Classes = this.legion.GetAllClasses();
            ViewBag.Races = this.legion.GetAllRaces();
            NPC model = new NPC();
            User user = await userManager.GetUserAsync(HttpContext.User);
            model.Owner = user.Id;
            return View("Edit", model);
        }

        [HttpGet]
        public IActionResult Generate(string classChoice, string statChoice)
        {
            var service = new NPCService();
            var npc = new NPC();
            ViewBag.Classes = this.legion.GetAllClasses();
            ViewBag.Races = this.legion.GetAllRaces();
            ViewBag.Action = "Generate";

            return View("Edit", npc);
        }

        [HttpGet]
        public IActionResult Edit(int id)
        {
            ViewBag.Action = "Edit";
            ViewBag.Classes = this.legion.GetAllClasses();
            ViewBag.Races = this.legion.GetAllRaces();
            var NPC = this.legion.FindNpc(id);
            return View(NPC);
        }

        [HttpPost]
        public IActionResult Edit(NPC npc)
        {
            //noticed npc service so added it here please use the service as needed -Halmar
            var service = new NPCService();
            //service funcions
            service.SetProficiencyMod(ref npc);

            if ((npc.NPCClassId == 1 || npc.NPCRaceId == 1 || npc.Level == 0) && !npc.IsAutoGenerated)
            {
                if (npc.NPCClassId == 1 || npc.NPCRaceId == 1)
                {
                    ModelState.AddModelError("ErrorRandomClassRace", "You cannot have Class or Race set to random if Auto-Generate is unchecked.");
                }
                if (npc.Level == 0)
                {
                    ModelState.AddModelError("ErrorLevel0", "You cannot have Level set to 0 if Auto-Generate is unchecked.");
                }
            }
            if (ModelState.IsValid)
            {
                service.GenerateNPC(ref npc, this.legion.GetAllClasses(), this.legion.GetAllRaces(), npc.NPCRaceId, npc.NPCClassId, npc.StatChoice);

                if (npc.NPCId == 0)
                {
                    this.legion.AddNpc(npc);
                }
                else
                {
                    this.legion.UpdateNpc(npc);
                }
                this.legion.Save();
                return RedirectToAction("Index");
            }
            else
            {
                ViewBag.Action = (npc.NPCId == 0) ? "Add" : "Edit";
                ViewBag.Classes = this.legion.GetAllClasses();
                ViewBag.Races = this.legion.GetAllRaces();
                return View(npc);
            }
        }

        [HttpGet]
        public IActionResult Delete(int id)
        {
            var npc = this.legion.FindNpc(id);
            return View(npc);
        }

        [HttpPost]
        public IActionResult Delete(NPC npc)
        {
            this.legion.DeleteNpc(npc);
            this.legion.Save();
            return RedirectToAction("Index");
        }
        [HttpGet]
        public IActionResult Display()
        {
            //Get all NPCs from session
            var session = new NPCSession(HttpContext.Session);
            var model = new NPCListView()
            {
                NPCs = session.GetViewNPCs()
            };

            return View(model);
        }

        public IActionResult User()
        {
            //Get all NPCs from session
            var session = new NPCSession(HttpContext.Session);
            var model = new NPCListView()
            {
                NPCs = session.GetViewNPCs()
            };
            return View(model);
        }

        [HttpPost]
        public RedirectToActionResult Add(NPC npc)
        {
            NPC character = this.legion.GetNpc(npc.NPCId);

            var session = new NPCSession(HttpContext.Session);
            var npcs = session.GetViewNPCs();
            if (npcs.Any(i => i.NPCId == character.NPCId))
            {
                session.RemoveViewNPCs();
                npcs.RemoveAll(i => i.NPCId == character.NPCId);
            }
            npcs.Add(character);
            session.SetViewNPCs(npcs);

            TempData["Message"] = $"{character.Name} added to View List!";

            return RedirectToAction("Index");
        }
    }
}
